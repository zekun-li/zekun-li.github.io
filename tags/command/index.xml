<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>command on Zekun's Zone</title><link>https://zekun-li.github.io/tags/command/</link><description>Recent content in command on Zekun's Zone</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zekun-li.github.io/tags/command/index.xml" rel="self" type="application/rss+xml"/><item><title>Two Github Accounts with Two SSH Keys</title><link>https://zekun-li.github.io/posts/github-keys/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/github-keys/</guid><description>To use two different GitHub accounts, one for work and one for personal use, you will need to create two separate RSA keys.
Create Two RSA keys Here are the steps to create two RSA keys:
Open your terminal.
Input the following command, replacing &amp;ldquo;email@example.com&amp;rdquo; with your email address:
ssh-keygen -t rsa -C &amp;quot;[email@example.com](mailto:email@example.com)&amp;quot;
When asked to enter a file in which to save the key, type in a unique name for each key.</description></item><item><title>Raspberry Pi Connect To WIFI with Command</title><link>https://zekun-li.github.io/posts/pi-connect-wifi/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/pi-connect-wifi/</guid><description>If you have an extra monitor, keyboard and mouse, then connecting Rapsberry Pi to WIFI is really easy. You just click a few buttons in the GUI and you&amp;rsquo;re done. However, these gadgets are not always handy. In this case, you will need to connect the Pi with WIFI with command line. This blog shows you how to do it.
Things to prepare: Ethernet Cable A device with network connectivity (mine is MacBook) Steps On the WIFI-connected device, type ifconfig | grep broadcast | arp -a.</description></item><item><title>Run jupyter notebook in docker container on remote server</title><link>https://zekun-li.github.io/posts/server-jupyter-docker/</link><pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/server-jupyter-docker/</guid><description>Jupyter notebook is an extremely convieninent tool for debugging a piece of code. It runs on browser and allows you to run code piece by piece instead of fresh from the begining. With docker, jupyter notebook is slightly more confusing than it is on local machine. This short article talks about how to correctly forward the port to run jupyter notebook in docker container on remote server.
We will have three locations to deal with; local machine, remote server, docker container.</description></item><item><title>Common Commands</title><link>https://zekun-li.github.io/posts/common-commands/</link><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/common-commands/</guid><description>Add python2 kernels to jupyter notebook: (source: https://ipython.readthedocs.io/en/stable/install/kernel_install.html)
python2 -m pip install ipykernel python2 -m ipykernel install --user Add python3 kernels to jupyter notebook: python3 -m pip install ipykernel python3 -m ipykernel install --user AttributeError: module &amp;lsquo;matplotlib.colors&amp;rsquo; has no attribute &amp;rsquo;to_rgba&amp;rsquo; Update matplotlib
python3 -m pip install --upgrade matplotlib Customized Datagenerator having AttributeError: ‘ProgbarLogger’ object has no attribute ‘log_values’ Check if the data generator could not load data correctly (0 sample)</description></item><item><title>Clean up boot directory when full</title><link>https://zekun-li.github.io/posts/clean-boot-dir/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/clean-boot-dir/</guid><description>When /boot directory is full, errors will occur if we try to install new packages or libraries. Here is a short blog showing how to clean up /boot space by getting rid of outdated kernel files).
Identify the current kernel version Use the command below
uname -r For me it’s showing up 4.4.25-040425-generic
List all the files and folders in /boot directory
ls /boot/ Then you will see lots of old kernels.</description></item></channel></rss>