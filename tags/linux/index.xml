<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Zekun's Zone</title><link>https://zekun-li.github.io/tags/linux/</link><description>Recent content in linux on Zekun's Zone</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 14 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zekun-li.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry Pi Connect To WIFI with Command</title><link>https://zekun-li.github.io/posts/pi-connect-wifi/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/pi-connect-wifi/</guid><description>If you have an extra monitor, keyboard and mouse, then connecting Rapsberry Pi to WIFI is really easy. You just click a few buttons in the GUI and you&amp;rsquo;re done. However, these gadgets are not always handy. In this case, you will need to connect the Pi with WIFI with command line. This blog shows you how to do it.
Things to prepare: Ethernet Cable A device with network connectivity (mine is MacBook) Steps On the WIFI-connected device, type ifconfig | grep broadcast | arp -a.</description></item><item><title>Connect to Remote Server with VSCode</title><link>https://zekun-li.github.io/posts/server-vscode/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/server-vscode/</guid><description>This blog has the video tutorials of the following two things:
Connect to UMN MSI server with VSCode Use UMN MSI with GPU</description></item><item><title>Common Commands</title><link>https://zekun-li.github.io/posts/common-commands/</link><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/common-commands/</guid><description>Add python2 kernels to jupyter notebook: (source: https://ipython.readthedocs.io/en/stable/install/kernel_install.html)
python2 -m pip install ipykernel python2 -m ipykernel install --user Add python3 kernels to jupyter notebook: python3 -m pip install ipykernel python3 -m ipykernel install --user AttributeError: module &amp;lsquo;matplotlib.colors&amp;rsquo; has no attribute &amp;rsquo;to_rgba&amp;rsquo; Update matplotlib
python3 -m pip install --upgrade matplotlib Customized Datagenerator having AttributeError: ‘ProgbarLogger’ object has no attribute ‘log_values’ Check if the data generator could not load data correctly (0 sample)</description></item><item><title>Dual Monitors with Ubuntu 16.04 LTS</title><link>https://zekun-li.github.io/posts/dual-monitor/</link><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/dual-monitor/</guid><description>Ubuntu 16.04 default dual monitor setting sometimes doesn&amp;rsquo;t work if you have one monitor placed in vertical position. In this case, the easiest way would be configure it manually.
If your second monitor is still black after plugged in the HMDI cable, remember to check the Display setting, the second monitor should be turned &amp;ldquo;On&amp;rdquo;.
First you should download the CompizConfig Settings Manager. The installation guide can be found here.</description></item><item><title>CUDA Errors and Solutions</title><link>https://zekun-li.github.io/posts/cuda-error/</link><pubDate>Mon, 08 Jun 2020 08:06:25 +0600</pubDate><guid>https://zekun-li.github.io/posts/cuda-error/</guid><description>CUDA is a parallel computing model created by Nvidia to assist the usage of GPU. It is widely used in the training of deep-learning models. It greatly speed up the computation in model training compared with its CPU-based counterpart. However we might encouter problems when using it, and here is a summarization of some common problems and the solutions. Please note that this post is not emphasizing on the installation of CUDA.</description></item><item><title>Clean up boot directory when full</title><link>https://zekun-li.github.io/posts/clean-boot-dir/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://zekun-li.github.io/posts/clean-boot-dir/</guid><description>When /boot directory is full, errors will occur if we try to install new packages or libraries. Here is a short blog showing how to clean up /boot space by getting rid of outdated kernel files).
Identify the current kernel version Use the command below
uname -r For me it’s showing up 4.4.25-040425-generic
List all the files and folders in /boot directory
ls /boot/ Then you will see lots of old kernels.</description></item></channel></rss>