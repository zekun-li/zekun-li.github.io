[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Go পরিচিতি"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/basic/","summary":"","tags":null,"title":"Go বেসিক"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/advanced/","summary":"","tags":null,"title":"অ্যাডভান্সড"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"বেসিক টাইপ সমূহ"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"ফাইল ম্যানিপুলেশন"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"ব্যাশ ভেরিয়েবল"},{"categories":["raspberrypi"],"contents":"If you have an extra monitor, keyboard and mouse, then connecting Rapsberry Pi to WIFI is really easy. You just click a few buttons in the GUI and you\u0026rsquo;re done. However, these gadgets are not always handy. In this case, you will need to connect the Pi with WIFI with command line. This blog shows you how to do it.\nThings to prepare: Ethernet Cable A device with network connectivity (mine is MacBook) Steps On the WIFI-connected device, type ifconfig | grep broadcast | arp -a. Devices in LAN will show up. Sample output: ? (169.254.168.39) at e4:5f:1:4d:59:b0 on en0 [ethernet] ? (192.168.0.1) at ec:4f:82:81:af:cc on en0 permanent [ethernet] ? (224.0.0.251) at 1:0:5e:0:0:fb on en0 ifscope permanent [ethernet] ? (239.255.255.250) at 1:0:5e:7f:ff:fa on en0 ifscope permanent [ethernet] Connect Pi to router using ethernet cable Retype the above command, and a new device should show up. For me, it is ? (192.168.0.56) at e4:5f:1:4d:59:b0 on en0 ifscope [ethernet] SSH to Pi with the above IP address. Example: ssh pi@192.168.0.56 After logging in, type sudo raspi-config, then \u0026ldquo;System Options\u0026rdquo; -\u0026gt; \u0026ldquo;Wireless LAN\u0026rdquo; -\u0026gt; \u0026ldquo;Enter SSID\u0026rdquo; -\u0026gt; \u0026ldquo;Enter password\u0026rdquo;. Note: The SSID is the WIFI name when you click the WIFI symbol on any device. Finish and exit the config. To verify the PI is connected with WLAN, do iwgetid, and the WLAN name should show up. Now if you do ifconfig | grep broadcast | arp -a , a new line should show up ? (192.168.0.57) at e4:5f:1:4d:59:b1 on en0 ifscope [ethernet] Then you\u0026rsquo;re done, this above IP address is the one to use when connecting Pi with WIFI.\n","date":"October 14, 2022","hero":"/posts/pi-connect-wifi/hero.png","permalink":"https://zekun-li.github.io/posts/pi-connect-wifi/","summary":"If you have an extra monitor, keyboard and mouse, then connecting Rapsberry Pi to WIFI is really easy. You just click a few buttons in the GUI and you\u0026rsquo;re done. However, these gadgets are not always handy. In this case, you will need to connect the Pi with WIFI with command line. This blog shows you how to do it.\nThings to prepare: Ethernet Cable A device with network connectivity (mine is MacBook) Steps On the WIFI-connected device, type ifconfig | grep broadcast | arp -a.","tags":["linux","raspberrypi","command"],"title":"Raspberry Pi Connect To WIFI with Command"},{"categories":["raspberrypi"],"contents":"Recording a timelapse video of a sunset can be a fantastic way to capture the beauty of nature in a condensed form. Without a bulky professional camera, you can still record a timelapse video with Raspberry Pi easily. In this blog post, we\u0026rsquo;ll introduce the raspistill and ffmepg command for creating videos.\nWe can take a look at a demo video shot with pi-camera v1.3 on Raspberry Pi. It was a maganificant sunset in Minnesota.\nFirst use raspistill to take a sequence of pictures during a period of time (e.g. 2 hours), then use ffmepg to convert the pictures to a video.\nraspistill -n -q 100 -ex night \\ -o pi_space/time_lapse_night/img_%05d.jpg -mm matrix -drc low \\ -t $((2*3600*1000)) -tl 3000 -n do not display preview window (use this when you don\u0026rsquo;t have graphical interface to Raspberry Pi) -q set the image quality, range (0,100) -ex set the exposure mode. It\u0026rsquo;s the best to use night when the light is dim -o path to the output file -mm set metering mode, options: [average,spot,backlit,matrix] -drc set DRC(dynamic range control) to boost the image visibiltiy with different lighting condition. low for dim light -t set recording period (unit: ms) -tl set time lapse between two frames （unit: ms) ffmpeg -framerate 30 -i time_lapse_night/img_%*.jpg -c:v libx264 -profile:v high -crf 20 -pix_fmt yuv420p time_lapse_night/a_output.mp4 Usually the -framerate ranges from 25 to 60. libx264 encoding generates video in mp4 format.\n","date":"November 14, 2021","hero":"/posts/pi-timelapse/hero.png","permalink":"https://zekun-li.github.io/posts/pi-timelapse/","summary":"Recording a timelapse video of a sunset can be a fantastic way to capture the beauty of nature in a condensed form. Without a bulky professional camera, you can still record a timelapse video with Raspberry Pi easily. In this blog post, we\u0026rsquo;ll introduce the raspistill and ffmepg command for creating videos.\nWe can take a look at a demo video shot with pi-camera v1.3 on Raspberry Pi. It was a maganificant sunset in Minnesota.","tags":["raspberrypi","camera","timelapse"],"title":"Raspberry Pi Timelapse Video"},{"categories":["linux"],"contents":"This blog has the video tutorials of the following two things:\nConnect to UMN MSI server with VSCode Use UMN MSI with GPU ","date":"October 4, 2021","hero":"/posts/server-vscode/hero.png","permalink":"https://zekun-li.github.io/posts/server-vscode/","summary":"This blog has the video tutorials of the following two things:\nConnect to UMN MSI server with VSCode Use UMN MSI with GPU ","tags":["vscode","linux"],"title":"Connect to Remote Server with VSCode"},{"categories":["linux"],"contents":"Jupyter notebook is an extremely convieninent tool for debugging a piece of code. It runs on browser and allows you to run code piece by piece instead of fresh from the begining. With docker, jupyter notebook is slightly more confusing than it is on local machine. This short article talks about how to correctly forward the port to run jupyter notebook in docker container on remote server.\nWe will have three locations to deal with; local machine, remote server, docker container. The port forwarding will build a link docker container -\u0026gt; remote server -\u0026gt; local machine.\nSame as usual, you should first log onto the server through ssh (see sample code below). You should replace zekunl with your user name and arya.usc.edu with your server ip address.\nssh zekunl@arya.usc.edu On the remote server, you can create a docker container by\nsudo nvidia-docker run --rm -ti -p 9999:8888 -v /home/zekunl/detectNet:/home/zekunl/detectNet/ spatialcomputing/deep-learning-env-gpu the -p parameter maps the port inside container to remote server. 9999 is the remote server port, and 8888 is the container port. Remote server port can be any un-used port but the container port MUST be 8888 since its the port allocated for jupyter notebook.\nIf you have multiple docker instances and you’ve run the above command in the first instance, then in the other instance, you can still map the 8888 port in the container, but the second instance can not map to the 9999 port on remote server anymore, because it’s alreay occupied by the first docker instance.\nThen we put up jupyter notebook inside the container:\njupyter notebook --ip=0.0.0.0 --port=8888 --no-browser The last thing is to forward the remote server port to local machine:\nssh -N -L 9999:localhost:9999 zekunl@arya.usc.edu If you open your browser and type http://localhost:9999, you will be prompted to enter the token for verification and the content inside docker will show up in the browser.\n","date":"August 8, 2021","hero":"/posts/server-jupyter-docker/hero.png","permalink":"https://zekun-li.github.io/posts/server-jupyter-docker/","summary":"Jupyter notebook is an extremely convieninent tool for debugging a piece of code. It runs on browser and allows you to run code piece by piece instead of fresh from the begining. With docker, jupyter notebook is slightly more confusing than it is on local machine. This short article talks about how to correctly forward the port to run jupyter notebook in docker container on remote server.\nWe will have three locations to deal with; local machine, remote server, docker container.","tags":["docker","command"],"title":"Run jupyter notebook in docker container on remote server"},{"categories":["linux"],"contents":"Add python2 kernels to jupyter notebook: (source: https://ipython.readthedocs.io/en/stable/install/kernel_install.html)\npython2 -m pip install ipykernel python2 -m ipykernel install --user Add python3 kernels to jupyter notebook: python3 -m pip install ipykernel python3 -m ipykernel install --user AttributeError: module \u0026lsquo;matplotlib.colors\u0026rsquo; has no attribute \u0026rsquo;to_rgba\u0026rsquo; Update matplotlib\npython3 -m pip install --upgrade matplotlib Customized Datagenerator having AttributeError: ‘ProgbarLogger’ object has no attribute ‘log_values’ Check if the data generator could not load data correctly (0 sample)\nIf have len() function but returned 0.\nlen() is not required for object class, but is required for keras.utils.Sequence class.\n","date":"January 5, 2021","hero":"/posts/common-commands/hero.png","permalink":"https://zekun-li.github.io/posts/common-commands/","summary":"Add python2 kernels to jupyter notebook: (source: https://ipython.readthedocs.io/en/stable/install/kernel_install.html)\npython2 -m pip install ipykernel python2 -m ipykernel install --user Add python3 kernels to jupyter notebook: python3 -m pip install ipykernel python3 -m ipykernel install --user AttributeError: module \u0026lsquo;matplotlib.colors\u0026rsquo; has no attribute \u0026rsquo;to_rgba\u0026rsquo; Update matplotlib\npython3 -m pip install --upgrade matplotlib Customized Datagenerator having AttributeError: ‘ProgbarLogger’ object has no attribute ‘log_values’ Check if the data generator could not load data correctly (0 sample)","tags":["linux","command"],"title":"Common Commands"},{"categories":["hardware"],"contents":"Ubuntu 16.04 default dual monitor setting sometimes doesn\u0026rsquo;t work if you have one monitor placed in vertical position. In this case, the easiest way would be configure it manually.\nIf your second monitor is still black after plugged in the HMDI cable, remember to check the Display setting, the second monitor should be turned \u0026ldquo;On\u0026rdquo;.\nFirst you should download the CompizConfig Settings Manager. The installation guide can be found here.\nOpen CompizConfig after installation. Go to General -\u0026gt; General Options -\u0026gt; Display Settings. The output field is what we should change in order to make it work.\nSince we have two monitors, there should be two lines in the output field. The first line is for the monitor on the left-hand side and the second line for the one on the right. The content in each line is formatted as: WxH+X+Y where X,Y,W,H are all integer pixel values.\nImagine a 2D coordinate system where the origin is at the top left corner, x goes to the right and y goes downward. W and H are the width and height of the monitor. X is the shift from origin to the top-left corner of the specific monitor in x direction. Similarly Y is the shift from origin to the top-left corner in y direction.\nSuppose the resolution of the first monitor is 1920x1080 and the second monitor is 1440x2560. The the first line should be 1920x1080+0+1480, and the second line should be 1440x2560+1920+0.\nFYI , the version information of my computer is as follows:\nlsb_release -a No LSB modules are available. Distributor ID:\tUbuntu Description:\tUbuntu 16.04.2 LTS Release:\t16.04 Codename:\txenial ","date":"January 5, 2021","hero":"/posts/dual-monitor/hero.svg","permalink":"https://zekun-li.github.io/posts/dual-monitor/","summary":"Ubuntu 16.04 default dual monitor setting sometimes doesn\u0026rsquo;t work if you have one monitor placed in vertical position. In this case, the easiest way would be configure it manually.\nIf your second monitor is still black after plugged in the HMDI cable, remember to check the Display setting, the second monitor should be turned \u0026ldquo;On\u0026rdquo;.\nFirst you should download the CompizConfig Settings Manager. The installation guide can be found here.","tags":["linux","hardware"],"title":"Dual Monitors with Ubuntu 16.04 LTS"},{"categories":["linux"],"contents":"When you\u0026rsquo;re connecting to the server, sometimes you got \u0026ldquo;Broken Pipe\u0026rdquo; prompt that kicks you off from the server if you are not active for a while. This can be quite annoying if you have unsaved changes in the code and was just away for a bit searching for some solution. This can be stopped from happening if you could change the ssh configuration on the server.\nOpen the file /etc/ssh/sshd_config on server and add the following lines in the end.\nClientAliveInterval 100 ClientAliveCountMax 3 The first line lets the server send out a package to client every 100 seconds and the second line tells the server do not stop connection until the client hasn\u0026rsquo;t been active for 3 queries. So you will have 300 seconds in total before the connection breaks due to inactivity.\nMost importantly, restart the sshd to make the changes effective.\nsudo service sshd restart or\nsudo /etc/init.d/sshd restart Enjoy it!\n","date":"January 5, 2021","hero":"/posts/ssh-timeout/hero.png","permalink":"https://zekun-li.github.io/posts/ssh-timeout/","summary":"When you\u0026rsquo;re connecting to the server, sometimes you got \u0026ldquo;Broken Pipe\u0026rdquo; prompt that kicks you off from the server if you are not active for a while. This can be quite annoying if you have unsaved changes in the code and was just away for a bit searching for some solution. This can be stopped from happening if you could change the ssh configuration on the server.\nOpen the file /etc/ssh/sshd_config on server and add the following lines in the end.","tags":["ssh","connection"],"title":"Stop SSH connection from timeout"},{"categories":["map"],"contents":"Mapbox is a great tool for visualizing maps especially when you have multiple layers and would like to compare them at the same location.\nIn my case, I have millions of small tiles in jpeg format, and I would like to overlay those tiles on OSM map. Those map tiles are generated from a neural network by taking OSM tiles as input and the resulting tiles are close to historical style. Thus it is interesting for me to compare the OSM map and the synthetic historical map to check the quality of the network output.\nOSM and historical Create tiff file and upload to Mapbox We need to create a mapbox account which can be registered here. With mapbox we can specify different base-map (theme) and you can choose the one you like the best. A very nice tutorial about Mapbox (as well as carto) is here by Andy Rutkowski. You could explore mapbox a little bit by following these slides.\nMapbox could read GeoTiff files as Tileset and load them as layers.The easiest way for us is to convert the JPEG images into GeoTiff by adding the lattitude/longitude information, i.e. geo-referencing, then concatenate those small tiff files into one big tiff. Since my historical tiles share the same geo-coordinates as the OSM counterpart, it\u0026rsquo;s relatively easy to generate a .wrd and .point file and use them to produce Tiff files by using the code here. We just need to do the Step 2 and Step 3 as in the ReadMe to get the Tiff files as output.\nAt this step, we\u0026rsquo;ve successfully geo-referencing the JPEG files and get a bunch of Tiff files. We could visualize the Tiff files in QGIS by loading them as layers. But if you prefer to be able to use it as a demo and save it online using Mapbox, we need to do something extra.\nFortunately this extra is not too much. We simply run the following command to concatenate those small tiff files into one big tiff file and name it mosaic.tiff.\ngdalbuildvrt mosaic.vrt ?.tif gdal_translate -of GTiff -co \u0026#34;COMPRESS=JPEG\u0026#34; -co \u0026#34;PHOTOMETRIC=YCBCR\u0026#34; -co \u0026#34;TILED=YES\u0026#34; -co \u0026#34;BIGTIFF=YES\u0026#34; mosaic.vrt mosaic.tif Display in Mapbox Then in the mapnik, follow the steps below:\nstep1 step2 step3 step4 Then the tile would successfully appear in Mapbox.\nstep5 Note: It is possible that you might need to convert the GeoTiff from PCT to RGB format by running the command bellow:\npct2rgb.py -of GTiff osm_32331_21348_16.tif a.tif ","date":"January 2, 2021","hero":"/posts/mapbox/hero.png","permalink":"https://zekun-li.github.io/posts/mapbox/","summary":"Mapbox is a great tool for visualizing maps especially when you have multiple layers and would like to compare them at the same location.\nIn my case, I have millions of small tiles in jpeg format, and I would like to overlay those tiles on OSM map. Those map tiles are generated from a neural network by taking OSM tiles as input and the resulting tiles are close to historical style.","tags":["mapbox","tiles"],"title":"Display JPEG historical map tiles in Mapbox"},{"categories":["map"],"contents":"For some reason, I needed to use mapnik to render the .osm file into tiles (png format), and I started my long journey with mapnik. The task is to render the text label layer only, without any background geographical features.\nThings started off smoothly. I found python already have pip installation for mapnik so I simply typed pip install mapnik to install it on my machine. I followed the tutorial here and successfully reproduced the output.\nstep1 Then I tried zooming into the Britain region and here\u0026rsquo;s what it looks like\u0026hellip;Hmm, not adding any new content, but just a enlarged version of the same picture.\nstep2 I also tried out with this, although it is out-dated, but I still (kind of) managed to have it work. The catch is that fill should be \u0026ldquo;#000000\u0026rdquo; instead of fill=\u0026quot;#000\u0026quot;. With \u0026ldquo;#000\u0026rdquo;, the text wouldn\u0026rsquo;t show up because it is a wrong color code. I was not able to have it display the real name and it is showing \u0026ldquo;name\u0026rdquo; as a placeholder.\nstep3 The good time didn\u0026rsquo;t last long. The real suffer just began. Because the above post said it\u0026rsquo;s out-dated, then I started wondering what the current method is. Turns out it\u0026rsquo;s Carto. We can use Carto to generate style-sheets (xml format) and feed into mapnik for rasterization.\nWhen I use carto generated style-sheets, it reports error of missing fonts and unrecognized attributes such as following.\nMapnik LOG\u0026gt; 2019-09-25 16:40:59: Unable to process some data while parsing \u0026#39;src/openstreetmap-carto/zekun_mapnik.xml\u0026#39;: * attribute \u0026#39;maximum-scale-denominator\u0026#39; with value \u0026#39;25000000\u0026#39; at line 0 * attribute \u0026#39;minimum-scale-denominator\u0026#39; with value \u0026#39;750000\u0026#39; at line 0 * attribute \u0026#39;maximum-scale-denominator\u0026#39; with value \u0026#39;750000\u0026#39; at line 0 * attribute \u0026#39;maximum-scale-denominator\u0026#39; with value \u0026#39;50000\u0026#39; at line 0 * attribute \u0026#39;maximum-scale-denominator\u0026#39; with value \u0026#39;50000\u0026#39; at line 0 * attribute \u0026#39;maximum-scale-denominator\u0026#39; with value \u0026#39;50000\u0026#39; at line 0 I googled a little bit and realized it is because mapnik version is too old. The first thing I did was replace the \u0026lsquo;maximum-scale-denominator\u0026rsquo; with \u0026lsquo;maxzoom\u0026rsquo;, similarly for \u0026lsquo;mininum-scale-denominator\u0026rsquo;. The error disappeared but the result image is just blank.\nThe second option is to upgrade mapnik to at least v3.0.22. I had to uninstall my mapnik from pip, download the mapnik and python-mapnik then compile from scratch.\nBut this step is not easy. mapnik installation test was fine but python-mapnik test keeps failing every time.\nTraceback (most recent call last): File \u0026#34;render3.py\u0026#34;, line 3, in \u0026lt;module\u0026gt; import mapnik File \u0026#34;/usr/local/lib/python2.7/dist-packages/mapnik-4.0.0-py2.7-linux-x86_64.egg/mapnik/__init__.py\u0026#34;, line 1071, in \u0026lt;module\u0026gt; register_plugins() File \u0026#34;/usr/local/lib/python2.7/dist-packages/mapnik-4.0.0-py2.7-linux-x86_64.egg/mapnik/__init__.py\u0026#34;, line 1053, in register_plugins DatasourceCache.register_datasources(path) Boost.Python.ArgumentError: Python argument types in DatasourceCache.register_datasources(str) did not match C++ signature: register_datasources(std::string) I kept having trouble with mapnik and python-mapnik because they are not compatible with each other. I uninstalled and reinstalled the packages for about 20 times and still didn\u0026rsquo;t solve the issue.\nIn the end, I decided switch to docker installation and was able to make it work. But apparently, this docker still doesn\u0026rsquo;t have the latest version either, and I was back to the same problem again.\nSigh\u0026hellip;.\nBut when I was googling, I came across this question, seems like that person had the same problem as mine. So gave it a try and added the following four lines to the code to convert the coordinate system of the bounding box.\nprj = mapnik.Projection(\u0026#34;+init=epsg:3857\u0026#34;) wgs84 = mapnik.Projection(\u0026#39;+init=epsg:4326\u0026#39;) tr = mapnik.ProjTransform(wgs84, prj) bbox = tr.forward(bbox) Surprisingly, this time something showed up.\nstep4 I finally got a piece of code to start with. It shows the Birmingham region that I downloaded.\nIt is only showing one layer because I commented out all the other layers in project.mml when run carto project.mml mapnik.xml. When I added all layers back (except for those require additional shp file), then adjusted the bbox range and image size, I finally got something decent.\nstep5 and\nstep6 Anyways, bon voyage.\n","date":"September 5, 2020","hero":"/posts/mapnik/hero.svg","permalink":"https://zekun-li.github.io/posts/mapnik/","summary":"For some reason, I needed to use mapnik to render the .osm file into tiles (png format), and I started my long journey with mapnik. The task is to render the text label layer only, without any background geographical features.\nThings started off smoothly. I found python already have pip installation for mapnik so I simply typed pip install mapnik to install it on my machine. I followed the tutorial here and successfully reproduced the output.","tags":["mapnik","configuration"],"title":"Experience with Mapnik"},{"categories":["linux"],"contents":"CUDA is a parallel computing model created by Nvidia to assist the usage of GPU. It is widely used in the training of deep-learning models. It greatly speed up the computation in model training compared with its CPU-based counterpart. However we might encouter problems when using it, and here is a summarization of some common problems and the solutions. Please note that this post is not emphasizing on the installation of CUDA. For the installation, please refer to here.\nUnexpected cublas Error CUDA has been running smoothly for all the experiments until at one point, it throws error\n2018-10-23 16:48:45.860068: E tensorflow/stream_executor/cuda/cuda_blas.cc:366] failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED You check the GPU usage and definitely it is 0%. But there is no other process running on that GPU competing for resource. You have exactly the same environenment and the same code, but it just doesn’t work anymore. You scratch your head and don’t know what to do.\nThe reason for that is, when a cuda job crashes, the cache get corrupted. It couldn’t re-collect the resource that it allocated in the begining. When the crash happens a lot of times, the resource would be used up and then it reports fail to create cublas error. A simple solution would be clean the cache.\nrm -r ~/.nv If this problem happens frequently, and have to run the above command very often, you might want to get out of the trouble by disabling the cache in the .bashrc file by adding this:\nCUDA_CACHE_DISABLE = 1 ","date":"June 8, 2020","hero":"/posts/cuda-error/hero.png","permalink":"https://zekun-li.github.io/posts/cuda-error/","summary":"CUDA is a parallel computing model created by Nvidia to assist the usage of GPU. It is widely used in the training of deep-learning models. It greatly speed up the computation in model training compared with its CPU-based counterpart. However we might encouter problems when using it, and here is a summarization of some common problems and the solutions. Please note that this post is not emphasizing on the installation of CUDA.","tags":["linux","cuda"],"title":"CUDA Errors and Solutions"},{"categories":["linux"],"contents":"When /boot directory is full, errors will occur if we try to install new packages or libraries. Here is a short blog showing how to clean up /boot space by getting rid of outdated kernel files).\nIdentify the current kernel version Use the command below\nuname -r For me it’s showing up 4.4.25-040425-generic\nList all the files and folders in /boot directory\nls /boot/ Then you will see lots of old kernels. The command below can list all the out-dated kernels and pipe it into purge command to uninstall.\ndpkg -l linux-{image,headers}-\u0026#34;[0-9]*\u0026#34; | awk \u0026#39;/^ii/{ print $2}\u0026#39; | grep -v -e `uname -r | cut -f1,2 -d\u0026#34;-\u0026#34;` | grep -e \u0026#39;[0-9]\u0026#39; | xargs sudo apt-get -y purge After the execution, the /boot directory should only contain the current kernel.\n","date":"January 30, 2020","hero":"/posts/clean-boot-dir/hero.png","permalink":"https://zekun-li.github.io/posts/clean-boot-dir/","summary":"When /boot directory is full, errors will occur if we try to install new packages or libraries. Here is a short blog showing how to clean up /boot space by getting rid of outdated kernel files).\nIdentify the current kernel version Use the command below\nuname -r For me it’s showing up 4.4.25-040425-generic\nList all the files and folders in /boot directory\nls /boot/ Then you will see lots of old kernels.","tags":["linux","command"],"title":"Clean up boot directory when full"},{"categories":null,"contents":"","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/","summary":"","tags":null,"title":"নোট সমূহ"},{"categories":null,"contents":"Go Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/go/","summary":"Go Notes ","tags":null,"title":"Go এর নোট সমূহ"},{"categories":null,"contents":"Bash Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://zekun-li.github.io/notes/bash/","summary":"Bash Notes ","tags":null,"title":"ব্যাশের নোট সমূহ"}]